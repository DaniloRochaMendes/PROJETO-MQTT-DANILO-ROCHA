#include <PubSubClient.h>        //OS LINKS DE BIBLIOTECAS PARA FUNCIONAMENTO DE MECÂNICAS ESPECIFICAS 

#include <UIPEthernet.h>

#include <SPI.h> 

byte mac[]={0xF8, 0x1A, 0x63, 0xAD, 0x6A, 0x17}; 
bool mensagem;
bool estado_sensor;

EthernetClient client;
PubSubClient mqttClient (client);


int pino2 = 2; 

void setup() {
  pinMode(pino2,INPUT_PULLUP);        //CONFIGURAÇÕES DOS IMÃS E ACESSO A INTERNET PELO ARDUÍNO
  Serial.begin(9600);
mqttClient.setServer("54.144.190.205", 1883);

estado_sensor = digitalRead(pino2);

 Ethernet.begin(mac);               //PREPARAÇÃO DO SERVIÇO DE INTERNET NO ARDUÍNO
 
Serial.print("O IP DO ARDUINO E ");
  Serial.print(Ethernet.localIP());
  Serial.println("!");


Serial.print("A MASK DO ARDUINO E " );
  Serial.print(Ethernet.subnetMask());
  Serial.println("!");


Serial.print("O GATEWAY DO ARDUINO E " ); 
  Serial.print(Ethernet.gatewayIP());
  Serial.println("!");

 

}

void loop() {

  mqttClient.connect("Danilo Mendes");        //SEQUENCIA DE CONTROLES PARA QUE SEJA ENVIADO A MENSAGEM DIRETAMENTE AO MQTT

if (estado_sensor == 0){

  mensagem = mqttClient.publish("DaniloSensor","Sensor Fechado");
Serial.println("FECHADO");

}

else{
  mensagem = mqttClient.publish("DaniloSensor","Sensor Aberto");
    

}


  estado_sensor = digitalRead(pino2);       //COMANDOS PARA A CONFIGURAÇÃO DO SENSOR E SUA FUNCIONALIDADE

  Serial.print("O estado do sensor e: ");
   if(estado_sensor == 0){


}
  
  else {
    Serial.println("ABERTO");

  }
  

mqttClient.loop();
}
